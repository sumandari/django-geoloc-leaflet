###########
# BUILDER #
###########
FROM python:3.7.7-alpine as builder

# set work directory
WORKDIR /usr/src/app

# set environtment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

RUN apk update \
    && apk add postgresql-dev gcc python3-dev musl-dev

# lint
RUN pip install --upgrade pip \
    && pip install flake8
COPY . .
RUN flake8 --ignore=E501,F401,E128 .

COPY ./requirements.txt .
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/app/wheels -r requirements.txt
  


###########
#  FINAL  #
###########
FROM python:3.7.7-alpine

ENV PATH /usr/local/bin:$PATH

# create intermediate directory for the app user
RUN mkdir -p /home/app

# create the app user
RUN addgroup -S app && adduser -S app -G app

# create the appropriate directories
ENV HOME=/home/app
ENV APP_HOME=/home/app/web
RUN mkdir $APP_HOME
RUN mkdir $APP_HOME/staticfiles
WORKDIR $APP_HOME

# install dependencies
RUN apk update && apk add libpq \
    && apk add --no-cache \
       --repository http://dl-cdn.alpinelinux.org/alpine/edge/testing \
       --repository http://dl-cdn.alpinelinux.org/alpine/edge/main \
       gdal gdal-dev geos-dev \
    && apk add geoip

COPY --from=builder /usr/src/app/wheels /wheels
COPY --from=builder /usr/src/app/requirements.txt .
RUN pip install --no-cache /wheels/*

# COPY entrypoint.prod.sh
COPY ./entrypoint.prod.sh $APP_HOME

# COPY project
COPY . $APP_HOME

# chown all files to the app user
RUN chown -R app:app $APP_HOME

# change to the app user
USER app

RUN chmod +x /home/app/web/entrypoint.prod.sh
ENTRYPOINT ["/home/app/web/entrypoint.prod.sh"]
